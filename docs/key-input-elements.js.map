{"version":3,"sources":["webpack:///webpack/bootstrap 84dadcc9b75cfdc246f1","webpack:///./src/key-input-registerer.js","webpack:///./src/event-matcher.js","webpack:///./src/key-input.js"],"names":[],"mappings":"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","file":"key-input-elements.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 84dadcc9b75cfdc246f1","// @flow\nimport * as ki from \"./key-input\";\n\nki.register();\n\n\n\n// WEBPACK FOOTER //\n// ./src/key-input-registerer.js","// @flow\nexport interface EventMatcherOptions {\n  allowModOnly?: boolean;\n  noMod?: boolean;\n  ignore?: ?RegExp;\n}\n\nconst META_CODES  = new Set([\"Meta\", \"MetaLeft\", \"MetaRight\"]);\nconst CTRL_CODES  = new Set([\"Control\", \"ControlLeft\", \"ControlRight\"]);\nconst ALT_CODES   = new Set([\"Alt\", \"AltLeft\", \"AltRight\"]);\nconst SHIFT_CODES = new Set([\"Shift\", \"ShiftLeft\", \"ShiftRight\"]);\n\nconst MOD_CODES = new Set([\n  ...Array.from(META_CODES),\n  ...Array.from(CTRL_CODES),\n  ...Array.from(ALT_CODES),\n  ...Array.from(SHIFT_CODES),\n]);\n\nconst DEFAULT_OPTIONS = {\n  allowModOnly: false,\n  noMod: false,\n  ignore: undefined,\n};\nexport { DEFAULT_OPTIONS };\n\nexport interface Key {\n  metaKey: boolean;\n  ctrlKey: boolean;\n  altKey: boolean;\n  shiftKey: boolean;\n  code: string;\n}\n\nexport default class EventMatcher {\n  key: Key;\n\n  constructor(pattern: string) {\n    this.key = parseValue(pattern);\n  }\n\n  test(k: Key): boolean {\n    return k.shiftKey === this.key.shiftKey\n      && k.altKey  === this.key.altKey\n      && k.ctrlKey === this.key.ctrlKey\n      && k.metaKey === this.key.metaKey\n      && this.testModInsensitive(k);\n  }\n\n  testModInsensitive(k: Key): boolean {\n    return this.key.code === k.code;\n  }\n}\n\nfunction parseValue(pattern: string): Key {\n  const splitted = pattern.split(\" + \");\n  const key = { altKey: false, shiftKey: false, ctrlKey: false, metaKey: false, code: \"\" };\n  while (splitted.length !== 1) {\n    const m = splitted.shift();\n    switch (m) {\n    case \"Meta\":  key.metaKey  = true; break;\n    case \"Ctrl\":  key.ctrlKey  = true; break;\n    case \"Alt\":   key.altKey   = true; break;\n    case \"Shift\": key.shiftKey = true; break;\n    default: throw Error(`Unexpected mod: ${m}`);\n    }\n  }\n  key.code = splitted[0];\n  return key;\n}\n\nexport function buildValue(key: Key, options: EventMatcherOptions): ?string {\n  const code = key.code;\n  if (!options.allowModOnly && isModKey(key.code)) {\n    return null;\n  }\n\n  let value;\n  if (options.noMod) {\n    value = code;\n  } else {\n    const a = [code];\n    if (key.metaKey  && !isMetaKey(code))  a.unshift(\"Meta\");\n    if (key.ctrlKey  && !isCtrlKey(code))  a.unshift(\"Ctrl\");\n    if (key.altKey   && !isAltKey(code))   a.unshift(\"Alt\");\n    if (key.shiftKey && !isShiftKey(code)) a.unshift(\"Shift\");\n    value = a.join(\" + \");\n  }\n\n  const ignore = options.ignore;\n  if (ignore && ignore.test(value)) {\n    return null;\n  }\n  return value;\n}\n\nfunction isModKey(code: string): boolean   { return MOD_CODES.has(code); }\nfunction isMetaKey(code: string): boolean  { return META_CODES.has(code); }\nfunction isCtrlKey(code: string): boolean  { return CTRL_CODES.has(code); }\nfunction isAltKey(code: string): boolean   { return ALT_CODES.has(code); }\nfunction isShiftKey(code: string): boolean { return SHIFT_CODES.has(code); }\n\n\n\n// WEBPACK FOOTER //\n// ./src/event-matcher.js","// @flow\nimport EventMatcher, { buildValue, DEFAULT_OPTIONS } from \"./event-matcher\";\nimport type EventMatcherOptions from \"./event-matcher\";\n\ndeclare interface KeyInput extends HTMLInputElement {\n  allowModOnly: boolean;\n  noMod: boolean;\n  ignore: ?RegExp;\n}\nexport interface KeyupInput extends KeyInput {}\nexport interface KeydownInput extends KeyInput {}\n\nfunction mixinKeyInput<T: HTMLInputElement>(c: Class<T>): Class<T & KeyInput> {\n  // $FlowFixMe Force cast to returned type\n  return class extends c {\n    get allowModOnly(): boolean { return this.hasAttribute(\"allow-mod-only\"); }\n    set allowModOnly(b: boolean): void { markAttr(this, \"allow-mod-only\", b); }\n\n    get noMod(): boolean { return this.hasAttribute(\"no-mod\"); }\n    set noMod(b: boolean): void { markAttr(this, \"no-mod\", b); }\n\n    get ignore(): ?RegExp {\n      const v = this.getAttribute(\"ignore\");\n      return v == null ? null : new RegExp(v);\n    }\n    set ignore(pattern: ?RegExp): void {\n      if (pattern != null) this.setAttribute(\"ignore\", pattern.toString());\n    }\n\n    get value(): string { return super.value; }\n    set value(v: string): void {\n      super.value = v;\n      if (document.activeElement === this) {\n        this.select();\n      }\n    }\n\n    constructor() {\n      super();\n    }\n\n    createdCallback() {\n      this.type = \"text\";\n      this.addEventListener(\"keypress\", (ev: KeyboardEvent) => ev.preventDefault(), true);\n      this.addEventListener(\"focus\", () => this.select());\n    }\n\n    attachedCallback() {}\n\n    static get observedAttributes() { return [\"type\"]; }\n    attributeChangedCallback(attrName: string) {\n      switch (attrName) {\n      case \"type\":\n        this.type = \"text\";\n        break;\n      }\n    }\n\n    buildMatcher(): EventMatcher {\n      return new EventMatcher(this.value, generateOptions(this));\n    }\n  };\n}\n\nexport function mixinKeydownInput<T: HTMLInputElement>(c: Class<T>): Class<T & KeydownInput> {\n  // $FlowFixMe Force cast to returned type\n  return class extends mixinKeyInput(c) {\n    constructor() {\n      super();\n    }\n\n    createdCallback() {\n      super.createdCallback();\n      this.addEventListener(\"keydown\", (e: KeyboardEvent) => handleEvent(this, e));\n    }\n  };\n}\n\nexport class KeydownInputElement extends mixinKeydownInput(HTMLInputElement) {\n  static get extends() { return \"input\"; }\n}\n\nexport function mixinKeyupInput<T: HTMLInputElement>(c: Class<T>): Class<T & KeyupInput> {\n  // $FlowFixMe Force cast to returned type\n  return class extends mixinKeyInput(c) {\n    constructor() {\n      super();\n    }\n\n    createdCallback() {\n      super.createdCallback();\n      this.addEventListener(\"keyup\", (e: KeyboardEvent) => handleEvent(this, e));\n      this.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n        const ignore = this.ignore;\n        if (!ignore) {\n          e.preventDefault();\n          return;\n        }\n\n        const v = buildValue(e, this);\n        if (v && ignore.test(v)) {\n          return;\n        }\n\n        e.preventDefault();\n      });\n    }\n  };\n}\n\nexport class KeyupInputElement extends mixinKeyupInput(HTMLInputElement) {\n  static get extends() { return \"input\"; }\n}\n\nexport function register() {\n  document.registerElement(\"keydown-input\", KeydownInputElement);\n  document.registerElement(\"keyup-input\", KeyupInputElement);\n}\n\n//\n\nfunction generateOptions(self: KeyInput): EventMatcherOptions {\n  const o: any = {};\n  for (const [name, defaultValue] of Object.entries(DEFAULT_OPTIONS)) {\n    const value = (self: any)[name];\n    o[name] = value == null ? defaultValue : value;\n  }\n  return o;\n}\n\nfunction handleEvent(self: KeyInput, event: KeyboardEvent) {\n  if (self.readOnly) return;\n  const v = buildValue(event, self);\n  console.log(event);\n  if (v != null) self.value = v;\n  if (v) event.preventDefault();\n}\n\nfunction markAttr(self: HTMLElement, name: string, b: boolean): void {\n  if (b) {\n    self.setAttribute(name, \"\");\n  } else {\n    self.removeAttribute(name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/key-input.js"],"sourceRoot":""}